package com.xwg.harmonycalulator.CalculateEngine;import com.xwg.harmonycalulator.ResourceTable;public class RadiusAngleExpr extends NonterminalExpr {	static Expr buildExpr(BuildContext context){		class MyProxy implements ChildExprBuildProxy{			public Expr buildExpr(BuildContext context){				return UnaryExpr.buildExpr(context);			}		} 		class MyCreater implements ParentCreater {			public NonterminalExpr newInstance(){				return new RadiusAngleExpr();			}		}				CharSequence exprOperator = context.getCalculatorContext().getText(ResourceTable.String_character_angle);		return buildExpr(new MyProxy(), new MyCreater(), context, "[" + exprOperator + "]");    }	public ValueOperator getValueOperator(String operatorContent){    	class MyOperator extends ValueOperator        {	        public MyOperator(String _operatorString){	    		super(_operatorString);	    	}            public boolean evaluate(Complex value1, Complex value2)            {            	if(value1.i != 0 || value2.i != 0){                    errorMessage = ResourceTable.String_error_invalid_input;                    return false;            	}            	evaluateResult = new Complex(value1.r * StrictMath.cos(value2.r),             								value1.r * StrictMath.sin(value2.r));            	return true;            }        };        return new MyOperator(operatorContent);    }}